version: '3.8'

services:
  video-analysis-remote:
    build:
      context: .
      dockerfile: Dockerfile.remote
    ports:
      - "${PORT:-8080}:8080"
    environment:
      # Server Configuration
      PORT: ${PORT:-8080}
      NODE_ENV: ${NODE_ENV:-production}
      
      # Google API Configuration
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      
      # Authentication Configuration
      ENABLE_AUTH: ${ENABLE_AUTH:-true}
      API_KEY: ${API_KEY}
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      AUTH_USERNAME: ${AUTH_USERNAME:-admin}
      AUTH_PASSWORD_HASH: ${AUTH_PASSWORD_HASH}
      
      # CORS Configuration
      ENABLE_CORS: ${ENABLE_CORS:-true}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      
    volumes:
      # Persist logs and temp files
      - video-logs:/tmp/video-analysis-mcp-logs
      - video-temp:/tmp/video-analysis-uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - video-analysis-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - video-analysis-remote
    networks:
      - video-analysis-network
    profiles:
      - with-ssl

volumes:
  video-logs:
    driver: local
  video-temp:
    driver: local

networks:
  video-analysis-network:
    driver: bridge
